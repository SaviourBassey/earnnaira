import random
import string
from django.db import models
from django.contrib.auth.models import User
from cloudinary.models import CloudinaryField

# Create your models here.

class UserAdditionalInformation(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    #image = models.ImageField(default="image.jpg")
    image = CloudinaryField('image', default="hello.py")
    phone = models.CharField(max_length=15, null=True, blank=True)
    referral_link = models.CharField(max_length=255, null=True, blank=True)
    account_bal = models.PositiveIntegerField(default=0) # Holds the sum of all referral earnings
    activity_bal = models.PositiveIntegerField(default=0) # Holds the sum of all activity earnings
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.user.username} Additional Information"


class Vendor(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    vendor_whatsapp_number = models.CharField(max_length=10)
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Vendor {self.user.first_name} {self.user.last_name}"


class CouponCode(models.Model):
    coupon_code = models.CharField(max_length=255, null=True, blank=True, unique=True)
    active = models.BooleanField(default=True)
    used_by = models.OneToOneField(User, on_delete=models.CASCADE, null=True, blank=True)
    generated_by = models.ForeignKey(Vendor, on_delete=models.CASCADE)
    timestamp = models.DateTimeField(auto_now_add=True)

    def generate_coupon_code(self, length=5):
        characters = string.ascii_uppercase + string.digits
        return ''.join(random.choice(characters) for _ in range(length))

    def save(self, *args, **kwargs):
        if not self.coupon_code:
            self.coupon_code = self.generate_coupon_code()
        super(CouponCode, self).save(*args, **kwargs)

    def __str__(self):
        return f"Coupon Code Generated by {self.generated_by}"
    

class Referral(models.Model):
    referring_user = models.ForeignKey(User, related_name='referrals', on_delete=models.CASCADE)
    referred_user = models.ForeignKey(User, related_name='referred_by', on_delete=models.CASCADE)
    generation = models.PositiveIntegerField()
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.referring_user.username} Referal"


class ReferalReward(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    direct_bal = models.PositiveIntegerField(default=0)
    indirect_bal = models.PositiveIntegerField(default=0)
    second_indirect_bal = models.PositiveIntegerField(default=0)
    total_bal = models.PositiveIntegerField(default=0)
    timestamp = models.DateTimeField(auto_now_add=True)

    def save(self, *args, **kwargs):
        self.total_bal = self.direct_bal + self.indirect_bal + self.second_indirect_bal
        super(ReferalReward, self).save(*args, **kwargs)

    def __str__(self):
        return f"{self.user.username} Referal Reward"